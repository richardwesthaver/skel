#+TITLE: skel
#+DESCRIPTION: project skeletons
* Overview 
+ status :: WIP
+ forge :: [[https://lab.rwest.io/ellis/skel][Heptapod]]
+ mirror :: [[https://github.com/richardwesthaver/skel][Github]]

This system provides functions and macros for building and deploying
project skeletons. /This is not a general purpose templating
system/. It is specifically for software projects which are likely
under version control, may be shared some day, and are made by yours
truly.

Skel is intend to be run like so:

#+begin_src sh
skel base
#+end_src

you can replace =base= with any valid name for a =skeleton= object
instance.

#+name: artist-depiction
#+begin_src artist
              .7
            .'/
           / /
          / /
         / /
        / /
       / /
      / /
     / /         
    / /          
  __|/
,-\__\
|f-"Y\|
\()7L/
 cgD                            __ _
 |\(                          .'  Y '>,
  \ \                        / _   _   \
   \\\                       )(_) (_)(|}
    \\\                      {  4A   } /
     \\\                      \uLuJJ/\l
      \\\                     |3    p)/
       \\\___ __________      /nnm_n//
       c7___-__,__-)\,__)(".  \_>-<_/D
                  //V     \_"-._.__G G_c__.
                         <"-._>__-,G_.___)\  
                        ("-.__.| \"<.__.-" ) 
                        |"-.__"\  |"-.__.-".\
                        ("-.__"". \"-.__.-".|
                        \"-.__""|!|"-.__.-".)
                         "-.__""\_|"-.__.-"./
#+end_src

- Goals ::
  - vaporize boilerplate code and docs
  - integrate reasonably well with my tools (Emacs/etc)
  - tree description of projects (nested sexps)
- Non-Goals ::
  - dependency management
  - speed
** resources
- [[https://www.gnu.org/software/emacs/manual/html_node/autotype/Skeleton-Language.html][skeleton-lanaguage (emacs)]]
- [[https://github.com/emacs-mirror/emacs/tree/master/lisp/cedet/ede][cedet/ede (emacs)]]
- [[https://www.gnu.org/software/make/manual/make.html][GNU make]]
* API
- CLOS-based core classes
- EIEIO-based wrapper classes
#+begin_src dot :file api.svg :exports results
    digraph { rankdir=LR; splines=true; node [shape=box]
      sk [label="skel"]
      skpro [label="sk-project"]
      sksrc [label="sk-source"]
      sktar [label="sk-target"]
      skrul [label="sk-rule"]
      sk -> skpro
      skpro -> skrul
      skrul -> sktar
      skrul -> sksrc
    }
#+end_src

#+RESULTS:
[[file:api.svg]]
